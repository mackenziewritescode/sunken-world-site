[{"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\calculator\\Calculator.js":"1","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\calculator\\buttonsArr.js":"2","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\photo-search\\text.js":"3","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\portfolio\\Portfolio.js":"4","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\markdown-app\\Markdown.js":"5","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\drum-machine\\DrumMachine.js":"6","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\drum-machine\\padsArr.js":"7","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\drum-machine\\tracksArr.js":"8","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\photo-search\\usePhotoSearch.js":"9","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\photo-search\\PhotoSearch.js":"10","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\ReactRouter.js":"11","C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\index.js":"12"},{"size":9209,"mtime":1606442301289,"results":"13","hashOfConfig":"14"},{"size":1814,"mtime":1598492942390,"results":"15","hashOfConfig":"14"},{"size":1387,"mtime":1606603113313,"results":"16","hashOfConfig":"14"},{"size":16531,"mtime":1606778640448,"results":"17","hashOfConfig":"14"},{"size":4709,"mtime":1606778826546,"results":"18","hashOfConfig":"14"},{"size":8180,"mtime":1606442309401,"results":"19","hashOfConfig":"14"},{"size":1398,"mtime":1606340348531,"results":"20","hashOfConfig":"14"},{"size":531,"mtime":1597610052685,"results":"21","hashOfConfig":"14"},{"size":742,"mtime":1601566860188,"results":"22","hashOfConfig":"14"},{"size":2566,"mtime":1606603914328,"results":"23","hashOfConfig":"14"},{"size":865,"mtime":1606863830885,"results":"24","hashOfConfig":"14"},{"size":231,"mtime":1606858378741,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"zgur6c",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\calculator\\Calculator.js",["55","56","57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Calculator.scss\";\r\nimport buttonsArr from \"./buttonsArr\";\r\nimport { FiDelete } from \"react-icons/fi\";\r\nimport { RiArrowGoBackLine } from \"react-icons/ri\";\r\n\r\nconst portfolio = (\r\n  <a\r\n    className=\"calculator-portfolio\"\r\n    href=\"http://www.sunkenworld.com/\"\r\n  >\r\n    <p className=\"portfolio-text\">\r\n      <RiArrowGoBackLine /> Back to portfolio\r\n    </p>\r\n  </a>\r\n);\r\n\r\nconst text = (\r\n  <div id=\"text\">\r\n    <h2>This Calculator is better than yours.</h2>\r\n    <p>\r\n      Sorry, that was rude. What I mean is, most calculator\r\n      apps kind of suck. They're rudimentary, inflexible,\r\n      and just not that useful.\r\n    </p>\r\n    <p>But not this one. </p>\r\n    <p>\r\n      This one lets you see your entire formula and\r\n      dynamically renders the output in a seperate display.\r\n      Achieving this is more complicated than it sounds. For\r\n      one, the formula displayed is not the same as the one\r\n      used for calculations. To this end, a display formula\r\n      and a computational formula need to be maintained at\r\n      all times. So a formula that looks like this\r\n    </p>\r\n    <code>55ร15%รท9</code>\r\n    <p>is actually computing this</p>\r\n    <code>55*0.15/9</code>\r\n    <p>\r\n      As you might be able to imagine, this makes\r\n      percentages particularly tricky. Especially when the\r\n      delete button is factored in (easily the most\r\n      complicated button). But I believe all of this effort\r\n      is worthwhile, as the results are intuitive,\r\n      functional, and powerful, as I hope you'll agree.\r\n    </p>\r\n    <p>\r\n      If you want to learn more, check out the README and\r\n      code over on{\" \"}\r\n      <a href=\"https://github.com/mackenziewritescode/calculator\">\r\n        Github\r\n      </a>\r\n      .\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst footer = (\r\n  <footer id=\"drum-footer\">\r\n    <p>\r\n      This site was made by{\" \"}\r\n      <a\r\n        className=\"footer-link\"\r\n        href=\"http://www.sunkenworld.com/\"\r\n      >\r\n        Mackenzie Charlton\r\n      </a>{\" \"}\r\n      in 2020 with{\" \"}\r\n      <a className=\"footer-link\" href=\"https://reactjs.org\">\r\n        React\r\n      </a>\r\n      .\r\n    </p>\r\n  </footer>\r\n);\r\n\r\nfunction Formula(props) {\r\n  return <div id=\"formula\">{props.displayFormula}</div>;\r\n}\r\n\r\nfunction Output(props) {\r\n  return <div id=\"output\">{props.output}</div>;\r\n}\r\n\r\nfunction Button(props) {\r\n  const handleClick = (value, display) => {\r\n    props.handleButton(value, display);\r\n  };\r\n\r\n  const button = props.button;\r\n\r\n  return (\r\n    <button\r\n      className={button.class}\r\n      onClick={() =>\r\n        handleClick(button.value, button.display)\r\n      }\r\n    >\r\n      {button.display === \"Del\" ? (\r\n        <FiDelete />\r\n      ) : (\r\n          button.display\r\n        )}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Buttons(props) {\r\n  const buttons = buttonsArr.map((button) => (\r\n    <Button\r\n      button={button}\r\n      key={button.value}\r\n      value={button.value}\r\n      display={button.display}\r\n      type={button.type}\r\n      className={button.class}\r\n      handleButton={props.handleButton}\r\n    />\r\n  ));\r\n  return <div id=\"buttonWrap\">{buttons}</div>;\r\n}\r\n\r\nfunction App() {\r\n  const [output, setOutput] = useState(\"0\");\r\n  const [formula, setFormula] = useState(\"0\");\r\n  const [displayFormula, setDisplayFormula] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.title = \"A Better Calculator\"\r\n  })\r\n\r\n  const handleButton = (value, display) => {\r\n    const numArr = formula\r\n      .toString()\r\n      .replace(/[-/*+=]/g, \" \")\r\n      .split(\" \");\r\n    const currentNum = numArr[numArr.length - 1];\r\n    const percentage = (currentNum / 100).toString();\r\n    const reversePercentage = (currentNum * 100).toString();\r\n    const formulaWithPercentage = formula\r\n      .toString()\r\n      .slice(0, -currentNum.length)\r\n      .concat(percentage);\r\n    const formulaReversePercentage = formula\r\n      .toString()\r\n      .slice(0, -currentNum.length)\r\n      .concat(reversePercentage);\r\n    const displayDelString = displayFormula\r\n      .slice(0, -1)\r\n      .toString();\r\n    const delString = formula.toString().slice(0, -1);\r\n\r\n    switch (value) {\r\n      case \"C\":\r\n        setDisplayFormula(\"\");\r\n        setFormula(\"0\");\r\n        setOutput(\"0\");\r\n        break;\r\n      case \"Del\":\r\n        if (displayFormula.length <= 1) {\r\n          //------------------------- if there's only 1 char, set to 0\r\n          setDisplayFormula(\"0\");\r\n          setFormula(\"0\");\r\n          setOutput(\"0\");\r\n        } else if (\r\n          // ----------------------- if the only char is an operator, set to 0\r\n          formula.length <= 3 &&\r\n          /[-/*+=]/.test(formula[1]) === true &&\r\n          formula[0] === 0\r\n        ) {\r\n          setDisplayFormula(\"0\");\r\n          setFormula(\"0\");\r\n          setOutput(\"0\");\r\n        } else if (\r\n          // ----------------- if the last char is %, multiply last char by 100\r\n          displayFormula.toString().slice(-1) === \"%\"\r\n        ) {\r\n          setDisplayFormula(displayDelString);\r\n          setFormula(formulaReversePercentage);\r\n          handleOutput(formulaReversePercentage);\r\n        } else {\r\n          setDisplayFormula(displayDelString);\r\n          setFormula(delString);\r\n          handleOutput(delString);\r\n        }\r\n        break;\r\n      case \"=\":\r\n        setDisplayFormula(removeOpBeforeEquals(formula));\r\n        setFormula(removeOpBeforeEquals(formula));\r\n        break;\r\n      case \"%\":\r\n        if (\r\n          testMultipleOps(formula) ||\r\n          displayFormula.toString().slice(-1) === \"%\" ||\r\n          formula.toString() === \"0\"\r\n        ) {\r\n          setDisplayFormula(displayFormula);\r\n          setFormula(formula);\r\n        } else {\r\n          setDisplayFormula(displayFormula + \"%\");\r\n          setFormula(formulaWithPercentage);\r\n          handleOutput(formulaWithPercentage);\r\n        }\r\n        break;\r\n      case \"+\":\r\n      case \"-\":\r\n      case \"*\":\r\n      case \"/\":\r\n        if (\r\n          testMultipleOps(formula) ||\r\n          testEmptyDisplay(displayFormula, value)\r\n        ) {\r\n          setDisplayFormula(displayFormula);\r\n          setFormula(formula);\r\n        } else {\r\n          setDisplayFormula(displayFormula + display);\r\n          setFormula(formula + value);\r\n        }\r\n        break;\r\n      case \".\":\r\n        if (!decimalTest(formula, currentNum)) {\r\n          setDisplayFormula(displayFormula + \".\");\r\n          setFormula(formula + \".\");\r\n        }\r\n        break;\r\n      default:\r\n        if (formula === \"0\") {\r\n          setDisplayFormula(display);\r\n          setFormula(value);\r\n          handleOutput(parseFloat(value));\r\n        } else {\r\n          setDisplayFormula(displayFormula + display);\r\n          setFormula(formula + value);\r\n          handleOutput(formula + value);\r\n        }\r\n    }\r\n  };\r\n\r\n  function removeOpBeforeEquals(string) {\r\n    if (testMultipleOps(string)) {\r\n      return (\r\n        Math.round(\r\n          10000000000 * eval(string.slice(0, -1))\r\n        ) / 10000000000\r\n      ).toString();\r\n\r\n      //return eval(string.slice(0, -1)).toString();\r\n    } else {\r\n      return (\r\n        Math.round(10000000000 * eval(string)) / 10000000000\r\n      ).toString();\r\n      //return eval(string).toString();\r\n    }\r\n  }\r\n\r\n  function testMultipleOps(string) {\r\n    let opRegex = /[-/*+=]/g;\r\n    let lastChar = string.toString().slice(-1);\r\n    if (opRegex.test(lastChar)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // function decimalTest(formula, currentNum) {\r\n  //   let lastChar = formula.toString().slice(-1);\r\n  //   // test if the last char is % or if there's already a decimal\r\n  //   if (lastChar === \"%\" || /\\./.test(currentNum)) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n  function decimalTest(formula, currentNum) {\r\n    let lastChar = formula.toString().slice(-1);\r\n    // test if the last char is % or if there's already a decimal\r\n    return lastChar === \"%\" || /\\./.test(currentNum)\r\n  }\r\n\r\n  function testEmptyDisplay(string, op) {\r\n    if (string === \"\" && /[+*/]/.test(op)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  // don't need tostring. do it to set output. it's cofusing to set answer to either a string or number\r\n  function handleOutput(string) {\r\n    let answer;\r\n    if (testMultipleOps(string)) {\r\n      answer = (\r\n        Math.round(\r\n          10000000000 * eval(string.slice(0, -1))\r\n        ) / 10000000000\r\n      ).toString();\r\n    } else {\r\n      answer = (\r\n        Math.round(10000000000 * eval(string)) / 10000000000\r\n      ).toString();\r\n    }\r\n    if (answer === \"NaN\") {\r\n      answer = 0;\r\n    }\r\n\r\n    setOutput(answer);\r\n  }\r\n\r\n  return (\r\n    <div id=\"calculator-wrapper\">\r\n      {portfolio}\r\n      <div id=\"content\">\r\n        <div id=\"calculator\">\r\n          <Formula displayFormula={displayFormula} />\r\n          <Output output={output} />\r\n          <Buttons handleButton={handleButton} />\r\n          {/* <div id=\"debugFormula\">{formula}</div> */}\r\n        </div>\r\n        {text}\r\n      </div>\r\n      {footer}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["59","60"],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\calculator\\buttonsArr.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\photo-search\\text.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\portfolio\\Portfolio.js",[],["61","62"],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\markdown-app\\Markdown.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\drum-machine\\DrumMachine.js",[],["63","64"],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\drum-machine\\padsArr.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\drum-machine\\tracksArr.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\photo-search\\usePhotoSearch.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\photo-search\\PhotoSearch.js",[],["65","66"],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\ReactRouter.js",[],"C:\\Users\\Max\\Documents\\Programming\\sunken-world-site-2\\react\\src\\index.js",[],{"ruleId":"67","severity":1,"message":"68","line":243,"column":25,"nodeType":"69","messageId":"70","endLine":243,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":250,"column":34,"nodeType":"69","messageId":"70","endLine":250,"endColumn":38},{"ruleId":"67","severity":1,"message":"68","line":295,"column":25,"nodeType":"69","messageId":"70","endLine":295,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":300,"column":34,"nodeType":"69","messageId":"70","endLine":300,"endColumn":38},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"71","replacedBy":"77"},{"ruleId":"73","replacedBy":"78"},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},"no-eval","eval can be harmful.","CallExpression","unexpected","no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],["81"],["82"],["81"],["82"],"no-global-assign","no-unsafe-negation"]